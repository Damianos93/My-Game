class Vader {
  constructor() {
    // this.position = position;
    this.vaderP;
    this.moveVader = this.moveVader.bind(this)
  }
  throwCookie() {
    let cookie = this.createCookieElement()
    gameArea.appendChild(cookie)
    let cookieThrow = new Audio('./music/wooooosh.wav')
    cookieThrow.play()
    this.moveCookie(cookie)
    // cookieThrow.pause()
  }

  createCookieElement() {
    let xPosition = parseInt(window.getComputedStyle(this.vaderP).getPropertyValue('left'))
    let yPosition = parseInt(window.getComputedStyle(this.vaderP).getPropertyValue('top'))
    let newCookie = document.createElement('img')
    newCookie.src = 'images/cookie.png'
    newCookie.classList.add('cookie')
    newCookie.style.left = `${xPosition}px `
    newCookie.style.top = `${yPosition + 80}px`
    return newCookie;
  }

  moveCookie(cookie) {
    let cookieInterval = setInterval(() => {
      let xPosition = parseInt(cookie.style.left)
      if (xPosition === window.innerWidth) {
        cookie.remove()
        clearInterval(cookieInterval)
      } else {
        cookie.style.left = `${xPosition + 4}px`
      }
      if (isTouching(cookie, game.myEmperor.emperorP)) {
        let explosion = document.createElement("img")
        explosion.src = "images/explo.gif"
        alert("Choked M1!@$124er")
        cookie.remove()
      }
    }, 1)

  }
  moveVader(event) {
    switch (event.key) {
      case "w":
        event.preventDefault()
        moveUp(this.vaderP)
        break;
      case "s":
        event.preventDefault()
        moveDown(game.myVader.vaderP)
        break;
      case "q":
        event.preventDefault()
        this.throwCookie()
      default:
        break;
    }
  }

  render() {
    this.vaderP = document.createElement("img")
    this.vaderP.src = "./images/cookievader.png"
    this.vaderP.style.position = "fixed"
    this.vaderP.style.left = "1rem";
    this.vaderP.style.height = "150px"
    let gameArea = document.getElementById("gameArea")
    gameArea.append(this.vaderP)
  }
  fromPxToNumber(pixel) {
    return parseInt(pixel.split("px")[0])
  }
}

// let myVader= new Vader()
